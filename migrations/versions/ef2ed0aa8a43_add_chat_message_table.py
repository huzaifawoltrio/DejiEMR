"""Add chat message table

Revision ID: ef2ed0aa8a43
Revises: 
Create Date: 2025-08-29 17:57:49.483101

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ef2ed0aa8a43'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('resource', sa.String(length=100), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('revoked_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=120), nullable=False),
    sa.Column('revoked_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('revoked_tokens', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_revoked_tokens_jti'), ['jti'], unique=True)

    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('role_permissions',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username_hash', sa.String(length=64), nullable=False),
    sa.Column('email_hash', sa.String(length=64), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=True),
    sa.Column('account_locked', sa.Boolean(), nullable=True),
    sa.Column('account_locked_until', sa.DateTime(), nullable=True),
    sa.Column('password_changed_at', sa.DateTime(), nullable=True),
    sa.Column('must_change_password', sa.Boolean(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('profile_picture_url', sa.String(length=1024), nullable=True),
    sa.Column('profile_picture_public_id', sa.String(length=1024), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email_hash'), ['email_hash'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_username_hash'), ['username_hash'], unique=True)

    op.create_table('appointments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('appointment_datetime', sa.DateTime(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('location', sa.String(length=100), nullable=True),
    sa.Column('services', sa.JSON(), nullable=True),
    sa.Column('appointment_fee', sa.Float(), nullable=True),
    sa.Column('billing_type', sa.String(length=50), nullable=True),
    sa.Column('repeat', sa.Boolean(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('resource', sa.String(length=100), nullable=True),
    sa.Column('resource_id', sa.String(length=100), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=255), nullable=True),
    sa.Column('success', sa.Boolean(), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('chat_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('receiver_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('read', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('chat_messages', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_chat_messages_timestamp'), ['timestamp'], unique=False)

    op.create_table('doctor_patient_association',
    sa.Column('doctor_id', sa.Integer(), nullable=False),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['doctor_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('doctor_id', 'patient_id')
    )
    op.create_table('doctor_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=False),
    sa.Column('last_name', sa.String(length=255), nullable=False),
    sa.Column('medical_license_number', sa.String(length=255), nullable=False),
    sa.Column('qualifications', sa.Text(), nullable=False),
    sa.Column('npi_number', sa.String(length=255), nullable=True),
    sa.Column('dea_number', sa.String(length=255), nullable=True),
    sa.Column('biography', sa.Text(), nullable=True),
    sa.Column('languages_spoken', sa.String(length=255), nullable=True),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('specialization', sa.String(length=100), nullable=True),
    sa.Column('years_of_experience', sa.Integer(), nullable=True),
    sa.Column('available_for_telehealth', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dea_number'),
    sa.UniqueConstraint('medical_license_number'),
    sa.UniqueConstraint('npi_number'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('patient_profiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=512), nullable=True),
    sa.Column('last_name', sa.String(length=512), nullable=True),
    sa.Column('date_of_birth', sa.String(length=255), nullable=True),
    sa.Column('gender', sa.String(length=255), nullable=True),
    sa.Column('phone_number', sa.String(length=255), nullable=True),
    sa.Column('address', sa.String(length=1024), nullable=True),
    sa.Column('city', sa.String(length=512), nullable=True),
    sa.Column('state', sa.String(length=512), nullable=True),
    sa.Column('zip_code', sa.String(length=255), nullable=True),
    sa.Column('emergency_contact_name', sa.String(length=512), nullable=True),
    sa.Column('emergency_contact_phone', sa.String(length=255), nullable=True),
    sa.Column('insurance_provider', sa.String(length=512), nullable=True),
    sa.Column('policy_number', sa.String(length=512), nullable=True),
    sa.Column('group_number', sa.String(length=512), nullable=True),
    sa.Column('policy_holder_name', sa.String(length=512), nullable=True),
    sa.Column('policy_holder_date_of_birth', sa.String(length=255), nullable=True),
    sa.Column('relationship_to_patient', sa.String(length=255), nullable=True),
    sa.Column('primary_care_physician', sa.String(length=512), nullable=True),
    sa.Column('allergies', sa.Text(), nullable=True),
    sa.Column('current_medications', sa.Text(), nullable=True),
    sa.Column('previous_surgeries', sa.Text(), nullable=True),
    sa.Column('family_medical_history', sa.Text(), nullable=True),
    sa.Column('smoking_status', sa.String(length=255), nullable=True),
    sa.Column('alcohol_consumption', sa.String(length=255), nullable=True),
    sa.Column('exercise_frequency', sa.String(length=255), nullable=True),
    sa.Column('chief_complaint', sa.Text(), nullable=True),
    sa.Column('symptoms_duration', sa.String(length=512), nullable=True),
    sa.Column('previous_treatment_for_condition', sa.Text(), nullable=True),
    sa.Column('additional_notes', sa.Text(), nullable=True),
    sa.Column('current_pain_level', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('patient_profiles')
    op.drop_table('doctor_profiles')
    op.drop_table('doctor_patient_association')
    with op.batch_alter_table('chat_messages', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_chat_messages_timestamp'))

    op.drop_table('chat_messages')
    op.drop_table('audit_logs')
    op.drop_table('appointments')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username_hash'))
        batch_op.drop_index(batch_op.f('ix_users_email_hash'))

    op.drop_table('users')
    op.drop_table('role_permissions')
    op.drop_table('roles')
    with op.batch_alter_table('revoked_tokens', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_revoked_tokens_jti'))

    op.drop_table('revoked_tokens')
    op.drop_table('permissions')
    # ### end Alembic commands ###
